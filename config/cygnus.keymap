/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10


&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
};

&sk {
    release-after-ms = <2000>;
    quick-release;
};

/ {
    combos {
        compatible = "zmk,combos";

        Com_Del {
            bindings = <&kp DELETE>;
            key-positions = <0 1>;
        };

        Com_Plus {
            bindings = <&kp PLUS>;
            key-positions = <1 2>;
        };

        Com_Minus {
            bindings = <&kp MINUS>;
            key-positions = <2 3>;
        };

        Com_Percent {
            bindings = <&kp PERCENT>;
            key-positions = <4 3>;
        };

        Com_Copy {
            bindings = <&kp LC(C)>;
            key-positions = <21 22>;
        };

        Com_Paste {
            bindings = <&kp LC(V)>;
            key-positions = <22 23>;
        };

        Com_Cut {
            bindings = <&kp LC(X)>;
            key-positions = <21 23>;
        };

        Com_Colon {
            bindings = <&kp COLON>;
            key-positions = <6 7>;
        };

        Com_Splash {
            bindings = <&kp SLASH>;
            key-positions = <8 7>;
        };

        Com_LeftParen {
            bindings = <&LeftPar>;
            key-positions = <16 17>;
        };

        Com_RightParen {
            bindings = <&RightPar>;
            key-positions = <17 18>;
        };

        Com_LeftBracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <26 27>;
        };

        Com_RightBarcket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <27 28>;
        };

        Com_Mouse {
            bindings = <&tog 4>;
            key-positions = <1 3>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <180>;
            global-quick-tap;
        };

        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "hold-preferred";
            bindings = <&mo>, <&kp>;

            quick-tap-ms = <180>;
            global-quick-tap;
        };

        as: as {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <135>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };

        LeftPar: LeftPar {
            compatible = "zmk,behavior-mod-morph";
            label = "LEFTPAR";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp LESS_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        RightPar: RightPar {
            compatible = "zmk,behavior-mod-morph";
            label = "RIGHTPAR";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        Q_Esc: Q_Esc {
            compatible = "zmk,behavior-tap-dance";
            label = "Q_ESC";
            #binding-cells = <0>;
            bindings = <&kp Q>, <&kp ESC>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&Q_Esc          &kp W           &kp E             &kp R        &kp T      &kp Y      &kp U          &kp I                &kp O                    &kp P
&hm LEFT_GUI A  &hm LEFT_ALT S  &hm LEFT_SHIFT D  &hm LCTRL F  &kp G      &kp H      &hm RCTRL J    &hm RSHFT K          &hm RIGHT_ALT L          &hm RIGHT_GUI SQT
&kp Z           &kp X           &kp C             &kp V        &kp B      &kp N      &kp M          &as LESS_THAN COMMA  &as GREATER_THAN PERIOD  &as QUESTION SLASH
                                &lt 3 TAB         &lt 2 LANG1  &kp SPACE  &kp ENTER  &kp BACKSPACE  &tog 1
            >;
        };

        layer_1 {
            bindings = <
&as LEFT_BRACE LEFT_BRACKET  &as EXCLAMATION NUMBER_1  &as AT_SIGN NUMBER_2  &as HASH NUMBER_3        &as RIGHT_BRACE RIGHT_BRACKET  &none   &none      &none            &none          &none
&as COLON SEMICOLON          &as DOLLAR NUMBER_4       &as PERCENT N5        &as CARET NUMBER_6       &as PLUS EQUAL                 &none   &kp RCTRL  &kp RIGHT_SHIFT  &kp RIGHT_ALT  &kp RIGHT_GUI
&as PIPE NON_US_BACKSLASH    &as AMPERSAND N7          &as ASTERISK N8       &as LEFT_PARENTHESIS N9  &kp SLASH                      &none   &none      &none            &none          &none
                                                       &trans                &lt 2 N0                 &trans                         &trans  &trans     &tog 1
            >;
        };

        layer_2 {
            bindings = <
&kp ESC       &none         &none           &none      &none   &kp LC(Z)  &kp LC(LEFT)  &kp UP_ARROW  &kp LC(RIGHT)  &kp LC(Y)
&kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_SHIFT  &kp LCTRL  &none   &kp INS    &kp LEFT      &kp DOWN      &kp RIGHT      &kp HOME
&none         &none         &none           &none      &none   &kp DEL    &kp LC(C)     &kp LC(V)     &kp LC(X)      &kp END
                            &trans          &trans     &trans  &trans     &trans        &trans
            >;
        };

        layer_3 {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2    &bt BT_SEL 3   &bt BT_SEL 4  &kp F1  &kp F2   &kp F3   &kp F4   &none
&kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_SHIFT  &kp LG(LCTRL)  &none         &kp F5  &kp F6   &kp F7   &kp F8   &none
&bt BT_CLR    &none         &none           &none          &none         &kp F9  &kp F10  &kp F11  &kp F12  &none
                            &trans          &trans         &trans        &trans  &trans   &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &msc SCRL_LEFT  &msc SCRL_DOWN  &mmv MOVE_UP    &msc SCRL_UP     &msc SCRL_RIGHT
&trans  &trans  &trans  &trans  &trans  &trans          &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans          &mkp MB3        &trans           &trans
                &trans  &trans  &trans  &mkp LCLK       &mkp RCLK       &trans
            >;
        };
    };
};
